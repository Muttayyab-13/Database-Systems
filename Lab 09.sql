create database LAB8
use LAB8
Go

CREATE TABLE DEPARTMENTS (
  DEPARTMENT_ID INT PRIMARY KEY,
  DEPARTMENT_NAME varchar(30) NOT NULL,
  MANAGER_ID INT,
 LOCATION_ID INT FOREIGN KEY REFERENCES LOCATIONS(LOCATION_ID) )

CREATE TABLE EMPLOYEES (
  EMPLOYEE_ID INT PRIMARY KEY,
  FIRST_NAME varchar(20),
  LAST_NAME varchar(25) NOT NULL,
  EMAIL varchar(25) NOT NULL,
  PHONE_NUMBER varchar(20) ,
  HIRE_DATE date NOT NULL,
  JOB_ID varchar(10) NOT NULL,
  SALARY decimal(8,2),
  COMMISSION_PCT INT,
  MANAGER_ID INT,
DEPARTMENT_ID INT FOREIGN KEY REFERENCES DEPARTMENTS(DEPARTMENT_ID));

CREATE TABLE COUNTRIES (
  COUNTRY_ID INT PRIMARY KEY,
  COUNTRY_NAME varchar(40),
  REGION_ID INT FOREIGN KEY REFERENCES REGIONS(REGION_ID));

 
CREATE TABLE JOBS (
  JOB_ID INT PRIMARY KEY,
  JOB_TITLE varchar(35) NOT NULL,
  MIN_SALARY decimal(6,0),
  MAX_SALARY decimal(6,0));

CREATE TABLE JOB_GRADES (
  GRADE_LEVEL INT PRIMARY KEY,
  LOWEST_SALARY INT,
  HIGHEST_SALARY INT);

CREATE TABLE JOB_HISTORY (
  EMPLOYEE_ID INT NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE NOT NULL,
  JOB_ID INT NOT NULL,
  DEPARTMENT_ID INT NOT NULL,
  PRIMARY KEY (EMPLOYEE_ID, START_DATE),
  FOREIGN KEY (JOB_ID) REFERENCES JOBS(JOB_ID),
  FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID)
);


CREATE TABLE LOCATIONS (
  LOCATION_ID INT PRIMARY KEY,
  STREET_ADDRESS varchar(40),
  POSTAL_CODE varchar(12),
  CITY varchar(30) NOT NULL,
  STATE_PROVINCE varchar(25),
 COUNTRY_ID INT FOREIGN KEY REFERENCES COUNTRIES(COUNTRY_ID) )

CREATE TABLE REGIONS (
  REGION_ID INT PRIMARY KEY,
  REGION_NAME varchar(25));


-- Insert data into REGIONS
INSERT INTO REGIONS (REGION_ID, REGION_NAME)
VALUES 
(1, 'Americas'),
(2, 'Europe'),
(3, 'Asia'),
(4, 'Middle East');

-- Insert data into COUNTRIES
INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME, REGION_ID)
VALUES
(1, 'USA', 1),
(2, 'France', 2),
(3, 'China', 3),
(4, 'UAE', 4);

-- Insert data into LOCATIONS
INSERT INTO LOCATIONS (LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID)
VALUES
(1, '123 Elm St', '10001', 'New York', 'NY', 1),
(2, '45 Rue Cler', '75007', 'Paris', NULL, 2),
(3, '88 Pearl Tower Rd', '200120', 'Shanghai', NULL, 3),
(4, '77 Sheikh Zayed Rd', '12345', 'Dubai', NULL, 4);

-- Insert data into DEPARTMENTS
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES
(1, 'HR', 101, 1),
(2, 'IT', 102, 2),
(3, 'Finance', 103, 3),
(4, 'Sales', 104, 4);

-- Insert data into JOBS
INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
VALUES
(1, 'Manager', 50000, 100000),
(2, 'Developer', 40000, 90000),
(3, 'Analyst', 30000, 80000),
(4, 'Salesperson', 20000, 70000);

-- Insert data into EMPLOYEES
INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES
(101, 'John', 'Doe', 'johndoe@example.com', '555-0101', '2023-01-01', 1, 75000, NULL, NULL, 1),
(102, 'Jane', 'Smith', 'janesmith@example.com', '555-0202', '2023-02-01', 2, 80000, NULL, 101, 2),
(103, 'Emily', 'Johnson', 'emilyj@example.com', '555-0303', '2023-03-01', 3, 60000, NULL, 101, 3),
(104, 'Michael', 'Brown', 'mikeb@example.com', '555-0404', '2023-04-01', 4, 50000, 5, 103, 4);

-- Insert data into JOB_GRADES
INSERT INTO JOB_GRADES (GRADE_LEVEL, LOWEST_SALARY, HIGHEST_SALARY)
VALUES
(1, 20000, 40000),
(2, 40001, 60000),
(3, 60001, 80000),
(4, 80001, 100000);

-- Insert data into JOB_HISTORY
INSERT INTO JOB_HISTORY (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
VALUES
(101, '2022-01-01', '2022-12-31', 1, 1),
(102, '2022-02-01', '2022-12-31', 2, 2),
(103, '2022-03-01', '2022-12-31', 3, 3),
(104, '2022-04-01', '2022-12-31', 4, 4);

SELECT COUNT(*) AS Total_Employees
FROM EMPLOYEES;

SELECT AVG(SALARY) AS Average_Salary
FROM EMPLOYEES;

SELECT MAX(SALARY) AS Highest_Salary
FROM EMPLOYEES;

SELECT MIN(SALARY) AS Lowest_Salary
FROM EMPLOYEES;

SELECT SUM(SALARY) AS Total_Salary_Expenditure
FROM EMPLOYEES;


SELECT COUNT(*) AS Total_Departments
FROM DEPARTMENTS;


SELECT DEPARTMENT_ID, AVG(SALARY) AS Average_Salary
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

SELECT DEPARTMENT_ID, COUNT(*) AS Total_Employees
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;


--1
SELECT E.FIRST_NAME, E.LAST_NAME 
FROM  EMPLOYEES E
JOIN DEPARTMENTS D on D.DEPARTMENT_ID=E.DEPARTMENT_ID
JOIN LOCATIONS L on D.LOCATION_ID=L.LOCATION_ID
JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
WHERE E.MANAGER_ID IS NOT NULL 
  AND C.COUNTRY_NAME = 'USA';

  --1
  SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL 
  AND DEPARTMENT_ID IN (
    SELECT DEPARTMENT_ID
    FROM DEPARTMENTS
    WHERE LOCATION_ID IN (
      SELECT LOCATION_ID
      FROM LOCATIONS
      WHERE COUNTRY_ID = (
        SELECT COUNTRY_ID
        FROM COUNTRIES
        WHERE COUNTRY_NAME = 'USA'
      )
    )
  );

  --1
SELECT E.FIRST_NAME, E.LAST_NAME 
FROM  EMPLOYEES E
where MANAGER_ID is not null


  --2
SELECT E.FIRST_NAME, E.LAST_NAME ,E.SALARY
FROM  EMPLOYEES E
where SALARY>(Select AVG(SALARY) from EMPLOYEES)

--3
SELECT E.FIRST_NAME, E.LAST_NAME ,E.SALARY
FROM  EMPLOYEES E
where SALARY>(Select MIN(SALARY) from EMPLOYEES F )

--4
SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY
FROM EMPLOYEES E
JOIN JOB_GRADES JG
ON E.SALARY = JG.LOWEST_SALARY;

--5
 
 SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY
FROM EMPLOYEES E
WHERE E.SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
  AND E.DEPARTMENT_ID IN (
    SELECT DEPARTMENT_ID
    FROM DEPARTMENTS
    WHERE DEPARTMENT_NAME LIKE '%IT%'
  );

  --6
 SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > (
    SELECT SALARY
    FROM EMPLOYEES
    WHERE FIRST_NAME = 'John'
);

--7
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY = (
    SELECT MIN(SALARY)
    FROM EMPLOYEES
);

--8
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES);


--9
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > ALL (
    SELECT SALARY
    FROM EMPLOYEES
    WHERE JOB_ID = 'SH_CLERK'
)
ORDER BY SALARY ASC;

--10
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID NOT IN (
    SELECT DISTINCT MANAGER_ID
    FROM EMPLOYEES
    WHERE MANAGER_ID IS NOT NULL
);

--11
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--12
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME, E.SALARY
FROM EMPLOYEES E
WHERE E.SALARY > (
    SELECT AVG(SALARY)
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID = E.DEPARTMENT_ID
);

--13
SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID % 2 = 0;


--14
SELECT  SALARY
FROM EMPLOYEES
ORDER BY SALARY DESC
OFFSET 4 ROWS FETCH NEXT 1 ROWS ONLY;

--15
SELECT DISTINCT SALARY
FROM EMPLOYEES
ORDER BY SALARY ASC
OFFSET 3 ROWS FETCH NEXT 1 ROWS ONLY;


--16
SELECT TOP 10 *
FROM EMPLOYEES
ORDER BY EMPLOYEE_ID DESC;

--17
SELECT DEPARTMENT_ID, DEPARTMENT_NAME
FROM DEPARTMENTS
WHERE DEPARTMENT_ID NOT IN (
    SELECT DISTINCT DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID IS NOT NULL
);

--18
SELECT DISTINCT TOP 3 SALARY
FROM EMPLOYEES
ORDER BY SALARY DESC;

--19
SELECT DISTINCT TOP 3 SALARY
FROM EMPLOYEES
ORDER BY SALARY ASC;

--20
SELECT E.FIRST_NAME, E.LAST_NAME, E.HIRE_DATE, E.SALARY
FROM EMPLOYEES E
WHERE E.EMPLOYEE_ID IN (
    SELECT DISTINCT MANAGER_ID
    FROM EMPLOYEES
    WHERE MANAGER_ID IS NOT NULL
)
AND DATEDIFF(YEAR, E.HIRE_DATE, GETDATE()) > 15;
